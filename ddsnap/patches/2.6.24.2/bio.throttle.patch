diff -ru linux-2.6.24.2/block/ll_rw_blk.c linux-2.6.24.2-bio/block/ll_rw_blk.c
--- linux-2.6.24.2/block/ll_rw_blk.c	2008-02-10 21:51:11.000000000 -0800
+++ linux-2.6.24.2-bio/block/ll_rw_blk.c	2008-02-13 10:49:06.000000000 -0800
@@ -3234,7 +3234,6 @@
 	do {
 		char b[BDEVNAME_SIZE];
 
-		q = bdev_get_queue(bio->bi_bdev);
 		if (!q) {
 			printk(KERN_ERR
 			       "generic_make_request: Trying to access "
Only in linux-2.6.24.2-bio/block: ll_rw_blk.c.orig
Only in linux-2.6.24.2-bio/block: ll_rw_blk.c.rej
diff -ru linux-2.6.24.2/drivers/md/dm.c linux-2.6.24.2-bio/drivers/md/dm.c
--- linux-2.6.24.2/drivers/md/dm.c	2008-02-10 21:51:11.000000000 -0800
+++ linux-2.6.24.2-bio/drivers/md/dm.c	2008-02-13 10:49:06.000000000 -0800
@@ -889,6 +889,22 @@
 	return r;
 }
 
+static unsigned dm_metric(struct bio *bio)
+{
+	return bio->bi_vcnt;
+}
+
+unsigned dm_inflight_total(struct dm_target *target)
+{
+	struct mapped_device *md;
+	request_queue_t *queue;
+	md = dm_table_get_md(target->table);
+	queue = md->queue;
+	dm_put(md);
+	return (queue->capacity - atomic_read(&queue->available));
+}
+EXPORT_SYMBOL_GPL(dm_inflight_total);
+
 /*-----------------------------------------------------------------
  * An IDR is used to keep track of allocated minor numbers.
  *---------------------------------------------------------------*/
@@ -967,6 +983,7 @@
 
 static struct block_device_operations dm_blk_dops;
 
+#define DEFAULT_THROTTLE_CAPACITY 1000
 /*
  * Allocate and initialise a blank device with a given minor.
  */
@@ -1009,6 +1026,11 @@
 		goto bad1_free_minor;
 
 	md->queue->queuedata = md;
+	md->queue->metric = dm_metric;
+	/* A dm device constructor may change the throttle capacity */
+	atomic_set(&md->queue->available, md->queue->capacity = DEFAULT_THROTTLE_CAPACITY);
+	init_waitqueue_head(&md->queue->throttle_wait);
+
 	md->queue->backing_dev_info.congested_fn = dm_any_congested;
 	md->queue->backing_dev_info.congested_data = md;
 	blk_queue_make_request(md->queue, dm_request);
@@ -1571,6 +1593,7 @@
 {
 	return test_bit(DMF_SUSPENDED, &md->flags);
 }
+EXPORT_SYMBOL_GPL(dm_suspended);
 
 int dm_noflush_suspending(struct dm_target *ti)
 {
Only in linux-2.6.24.2-bio/drivers/md: dm.c.orig
Only in linux-2.6.24.2-bio/fs: bio.c.orig
Only in linux-2.6.24.2-bio/fs: bio.c.rej
diff -ru linux-2.6.24.2/include/linux/bio.h linux-2.6.24.2-bio/include/linux/bio.h
--- linux-2.6.24.2/include/linux/bio.h	2008-02-10 21:51:11.000000000 -0800
+++ linux-2.6.24.2-bio/include/linux/bio.h	2008-02-13 10:49:06.000000000 -0800
@@ -111,6 +111,9 @@
 	bio_end_io_t		*bi_end_io;
 	atomic_t		bi_cnt;		/* pin count */
 
+	struct request_queue	*bi_queue;	/* for throttling */
+	unsigned		bi_throttle;	/* throttle metric */
+
 	void			*bi_private;
 
 	bio_destructor_t	*bi_destructor;	/* destructor */
diff -ru linux-2.6.24.2/include/linux/blkdev.h linux-2.6.24.2-bio/include/linux/blkdev.h
--- linux-2.6.24.2/include/linux/blkdev.h	2008-02-10 21:51:11.000000000 -0800
+++ linux-2.6.24.2-bio/include/linux/blkdev.h	2008-02-13 10:49:06.000000000 -0800
@@ -384,6 +384,10 @@
 	struct work_struct	unplug_work;
 
 	struct backing_dev_info	backing_dev_info;
+	unsigned (*metric)(struct bio *bio);	/* bio throttle metric */
+	wait_queue_head_t	throttle_wait;
+	atomic_t		available;
+	unsigned		capacity;
 
 	/*
 	 * The queue owner gets to use this for whatever they like.
Only in linux-2.6.24.2-bio/include/linux: blkdev.h.orig
diff -ru linux-2.6.24.2/include/linux/device-mapper.h linux-2.6.24.2-bio/include/linux/device-mapper.h
--- linux-2.6.24.2/include/linux/device-mapper.h	2008-02-10 21:51:11.000000000 -0800
+++ linux-2.6.24.2-bio/include/linux/device-mapper.h	2008-02-13 10:49:06.000000000 -0800
@@ -196,6 +196,7 @@
 struct gendisk *dm_disk(struct mapped_device *md);
 int dm_suspended(struct mapped_device *md);
 int dm_noflush_suspending(struct dm_target *ti);
+unsigned dm_inflight_total(struct dm_target *target);
 
 /*
  * Geometry functions.
Only in linux-2.6.24.2-bio/include/linux: device-mapper.h.orig
