diff -purN linux-2.6.25.4-old/drivers/md/dm.c linux-2.6.25.4-new/drivers/md/dm.c
--- linux-2.6.25.4-old/drivers/md/dm.c	2008-05-15 08:00:12.000000000 -0700
+++ linux-2.6.25.4-new/drivers/md/dm.c	2008-06-05 17:00:33.000000000 -0700
@@ -907,6 +907,15 @@ static int dm_any_congested(void *conges
 	return r;
 }
 
+unsigned dm_inflight_total(struct dm_target *target)
+{
+	struct mapped_device *md = dm_table_get_md(target->table);
+	int inflight = dm_disk(md)->in_flight;
+	dm_put(md);
+	return inflight;
+}
+EXPORT_SYMBOL_GPL(dm_inflight_total);
+
 /*-----------------------------------------------------------------
  * An IDR is used to keep track of allocated minor numbers.
  *---------------------------------------------------------------*/
@@ -1543,6 +1552,7 @@ out_unlock:
 	mutex_unlock(&md->suspend_lock);
 	return r;
 }
+EXPORT_SYMBOL_GPL(dm_suspend);
 
 int dm_resume(struct mapped_device *md)
 {
@@ -1631,6 +1684,7 @@ int dm_suspended(struct mapped_device *m
 {
 	return test_bit(DMF_SUSPENDED, &md->flags);
 }
+EXPORT_SYMBOL_GPL(dm_suspended);
 
 int dm_noflush_suspending(struct dm_target *ti)
 {
diff -purN linux-2.6.25.4-old/drivers/md/dm-ioctl.c linux-2.6.25.4-new/drivers/md/dm-ioctl.c
--- linux-2.6.25.4-old/drivers/md/dm-ioctl.c	2008-05-15 08:00:12.000000000 -0700
+++ linux-2.6.25.4-new/drivers/md/dm-ioctl.c	2008-06-05 17:00:02.000000000 -0700
@@ -1559,3 +1559,4 @@ out:
 
 	return r;
 }
+EXPORT_SYMBOL_GPL(dm_copy_name_and_uuid);
diff -purN linux-2.6.25.4-old/drivers/md/Kconfig linux-2.6.25.4-new/drivers/md/Kconfig
--- linux-2.6.25.4-old/drivers/md/Kconfig	2008-05-15 08:00:12.000000000 -0700
+++ linux-2.6.25.4-new/drivers/md/Kconfig	2008-06-05 17:00:02.000000000 -0700
@@ -288,4 +288,13 @@ config DM_UEVENT
 	---help---
 	Generate udev events for DM events.
 
+config DM_DDSNAP
+	tristate "Distributed Data Snapshot target (EXPERIMENTAL)"
+	depends on BLK_DEV_DM && EXPERIMENTAL
+	---help---
+	  This device-mapper target allows you to take multiple simultaneous
+	  read/write snapshots of a clustered or non-clustered block devices.
+	  If unsure, say N.
+
+
 endif # MD
diff -purN linux-2.6.25.4-old/drivers/md/Makefile linux-2.6.25.4-new/drivers/md/Makefile
--- linux-2.6.25.4-old/drivers/md/Makefile	2008-05-15 08:00:12.000000000 -0700
+++ linux-2.6.25.4-new/drivers/md/Makefile	2008-06-05 17:00:02.000000000 -0700
@@ -41,6 +41,7 @@ obj-$(CONFIG_DM_MULTIPATH_RDAC)	+= dm-rd
 obj-$(CONFIG_DM_SNAPSHOT)	+= dm-snapshot.o
 obj-$(CONFIG_DM_MIRROR)		+= dm-mirror.o
 obj-$(CONFIG_DM_ZERO)		+= dm-zero.o
+obj-$(CONFIG_DM_DDSNAP)		+= dm-ddsnap.o
 
 quiet_cmd_unroll = UNROLL  $@
       cmd_unroll = $(PERL) $(srctree)/$(src)/unroll.pl $(UNROLL) \
diff -purN linux-2.6.25.4-old/include/linux/device-mapper.h linux-2.6.25.4-new/include/linux/device-mapper.h
--- linux-2.6.25.4-old/include/linux/device-mapper.h	2008-05-15 08:00:12.000000000 -0700
+++ linux-2.6.25.4-new/include/linux/device-mapper.h	2008-06-05 17:00:02.000000000 -0700
@@ -196,6 +196,7 @@ int dm_copy_name_and_uuid(struct mapped_
 struct gendisk *dm_disk(struct mapped_device *md);
 int dm_suspended(struct mapped_device *md);
 int dm_noflush_suspending(struct dm_target *ti);
+unsigned dm_inflight_total(struct dm_target *target);
 
 /*
  * Geometry functions.
diff -purN linux-2.6.25.4-old/include/linux/prctl.h linux-2.6.25.4-new/include/linux/prctl.h
--- linux-2.6.25.4-old/include/linux/prctl.h	2008-05-15 08:00:12.000000000 -0700
+++ linux-2.6.25.4-new/include/linux/prctl.h	2008-06-05 18:10:08.000000000 -0700
@@ -67,4 +67,8 @@
 #define PR_CAPBSET_READ 23
 #define PR_CAPBSET_DROP 24
 
+/* set process less throttleL: see PF_LESS_THROTTLE */
+#define PR_SET_LESS_THROTTLE 25
+#define PR_SET_MEMALLOC 26
+
 #endif /* _LINUX_PRCTL_H */
diff -purN linux-2.6.25.4-old/kernel/sys.c linux-2.6.25.4-new/kernel/sys.c
--- linux-2.6.25.4-old/kernel/sys.c	2008-05-15 08:00:12.000000000 -0700
+++ linux-2.6.25.4-new/kernel/sys.c	2008-06-05 17:00:02.000000000 -0700
@@ -1591,7 +1591,16 @@ static void k_getrusage(struct task_stru
 				t = next_thread(t);
 			} while (t != p);
 			break;
-
+		case PR_SET_LESS_THROTTLE: {
+			current->flags |= PF_LESS_THROTTLE;
+			return 0;
+		}
+			
+		case PR_SET_MEMALLOC: {
+			current->flags |= PF_MEMALLOC;
+			printk("set PF_MEMALLOC for process %s[%i]\n", current->comm, current->pid);
+			return 0;
+		}
 		default:
 			BUG();
 	}
