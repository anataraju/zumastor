///////////////////
To convert this document to HTML, use the command
 asciidoc -a toc -a numbered zumastor-howto.txt 

Note: the asciidoc package in Ubuntu is 7.1.2, which 
doesn't produce working table of contents.
Version 8.2.5 does; to install this, download
http://www.methods.co.nz/asciidoc/asciidoc-8.2.5.tar.gz 
and run its install.sh.  (I edited it to install into /usr/local/asciidoc
to avoid confusing my package manager.)
///////////////////

Zumastor HOWTO
==============
Dan Kegel <dank@kegel.com>
v0.0, Dec 2007


Introduction
------------
This document will explain what Zumastor is, how it differs from
other snapshot and replication tools, how to install it,
and how to use it.

What is Zumastor?
-----------------
It has been difficult to convince users of commercial NAS applicances
to switch to Linux.  In particular, some commercial NAS boxes have
had better support for snapshots and remote replication than Linux does.
Zumastor is an effort to fix that.

Snapshots
~~~~~~~~~
Snapshots can be useful as part of an hourly backup system.  Instead of
shutting down all applications for the entire duration of the backup, you
can shut them down for just the second or two needed to take a snapshot.

If your goal is to protect users from accidental deletion of files,
you may want to take snapshots every hour, and leave the last few
snapshots around; users who accidentally delete a file can just look in
the snapshot.

LVM already lets administrators create snapshots, but its design has the
surprising property that every block you change on the original volume
consumes one block for each snapshot.  The resulting speed and space
penalty usually makes the use of more than one or two snapshots at a
time impractical.

Zumastor keeps all snapshots for a particular volume in a common snapshot
store, and shares blocks the way one would expect.  Thus making a
change to one block of a file in the original volume only uses one block
in the snapshot store no matter how many snapshots you have.

Remote Replication
~~~~~~~~~~~~~~~~~~
Andrew Tridgell's rsync is a wonderful tool for replicating files remotely. 
However, when doing periodic replication of large numbers of 
infrequently changing files, the overhead for figuring out what files
need to be sent can be extreme.

Zumastor keeps track of which block change between one snapshot
and the next, and can easily send just the changed blocks.
Thus Zumastor can do periodic replication of large filesystems much more 
efficiently than rsync can.

License
-------
Zumastor is licensed under GPLv2.

Status
------
Zumastor has a stable release (0.4) which is limited (e.g. only supports 2GB
volumes) but very stable.  We are focusing on documentation
and user feedback now, and hope to have the 0.5 stable release 
out soon.  Please download and test the 0.5 snapshots and give us feedback
via the issue tracker, mailing list, or IRC channel at http://zumastor.org[].

We have a number of kernel patches, and will push them upstream as
soon as possible.  See http://zumastor.org[] for a list.

Development
-----------
Most of Zumastor development is done by a small group of contributors
(Daniel Phillips, Jiaying Zhang, Shapor Naghibzadeh, Dan Kegel, Drake Diedrich, Frank Mayhar, and Chris Smith), but we welcome patches from the community.
(Jonathan Van Eenwyk contributed a cool offline backup feature, 
but http://www.nomorevoid.com/downloads/dm-ddloop.tar.gz[his patch] has not yet been merged.  Let us know if you need this.)

Zumastor User Interface
-----------------------
Zumastor exposes itself to users in several ways:

* An admin script, /etc/init.d/zumastor
* A commandline tool, /bin/zumastor
* Origin mount points, e.g. /var/mount/zumastor/myvolumename
* Snapshot mount points, e.g. /var/mount/zumastor/myvolumename(10)

Zumastor admin script
~~~~~~~~~~~~~~~~~~~~~
The admin script, /etc/init.d/zumastor, simply starts or stops the
Zumastor daemon responsible for mounting Zumastor volumes.  Normally this
is run once at system startup time by init, but you may need to run it
manually in unusual circumstances.

For instance, if you tell Zumastor to use origin volumes or snapshot
stores on loopback devices that are not set up at boot time, and then
reboot, Zumastor can't mount them automatically; you have to set them up
and then restart Zumastor with the command `/etc/init.d/zumastor restart`.

Zumastor commandline tool
~~~~~~~~~~~~~~~~~~~~~~~~~
The sysadmin uses /bin/zumastor to configure snapshot stores,
take or delete snapshots, and set up remote replication.
See http://zumastor.org/man/zumastor.8.html[the zumastor man page] for more information.

The zumastor command is really just a very fancy wrapper around 
the underlying command, ddsnap.  You probably won't ever need to 
use ddsnap directly, but if you're curious, see http://zumastor.org/man/ddsnap.8.html[the ddsnap man page].

Origin and Snapshot mount points
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Zumastor deals with two kinds of volumes: 'origin' volumes
and 'snapshot' volumes.  Simply put, origin volumes are what you 
take snapshots of.
Zumastor mounts these volumes for you in appropriately named 
subdirectories of /var/mount/zumastor.

Snapshot volumes have the same name as their origin volumes, but
with a snapshot number in parenthesis after it.
Zumastor skips one number each snapshot for housekeeping reasons, so
home(1000) would be roughly the 500th snapshot of home.  
The snapshot number never decreases (though perhaps it would
wrap if you did billions of snapshots...)

Note: users would probably be happier if Zumastor used a different
convention for naming snapshots, e.g. volname-hourly-YYYY-MM-DD-HH:MM.
A future release of Zumastor might allow this.

Note: Zumastor always mounts all its volumes under /var/mount/zumastor.
This is fine for fileservers with no local users, as the volumes
will be mounted at the proper location on the NFS client,
but it's not so nice for e.g. desktops that just want to use Zumastor
to add snapshots to home directories.
A future release of Zumastor will make the mount points configurable
and improve local usability of snapshots.

Installing Zumastor
-------------------
Zumastor requires changes to the Linux kernel that are not yet
in the vanilla kernel, so a patched kernel is required.
You can install Zumastor on any recent distribution if you're
willing to do it by hand.  Automated installation is available
for Debian / Ubuntu and soon also for Gentoo.  (RHEL, Fedora, and Suse
are probably next on our list of distros to support, please 
let us know if you're willing to contribute RPM .spec files.)
For developers, we also support automated installation 
with UML.
And for anyone who just wants to try out Zumastor without modifying
their system, we have tutorials showing how to install it in VMware
and QEMU.

Debian / Ubuntu
~~~~~~~~~~~~~~~
Prebuilt kernel packages for recent Debian / Ubuntu systems
are available.  
Stable releases are at http://zumastor.org/downloads/releases[],
and trunk snapshots are at http://zumastor.org/downloads/snapshots[].
The directories there are named by branch and svn revision,
e.g. 0.4-r999 is the 0.4 branch as of svn revision 999.
Once you've picked a version, download and install its four .deb
packages.

You should probably play with it in a virtual environment
first.  (You can even do this on Windows!)
See http://zumastor.org/demo-vmware-ubuntu.html[] for
a walkthrough using VMware, 
http://zumastor.org/demo-qemu-ubuntu.html[] for a
walkthrough using QEMU, and 
http://zumastor.googlecode.com/svn/trunk/doc/install.html[] for
a writeup that builds the .deb's from source and installs on a real machine.
(We should unify these and fold them into this HOWTO, the duplication is crazy.)

Gentoo
~~~~~~
Coming soon.  
You can see a preview of the recipe at http://zumastor.googlecode.com/svn/branches/gentoo/doc/gentoo_zumastor_guide.html[here] if you're curious.

Source
~~~~~~
If you use a distro not covered above, you can install if you're 
willing to patch your kernel and compile everything manually.  See
the writeup at http://zumastor.googlecode.com/svn/trunk/ddsnap/INSTALL[].

UML
~~~
Developers who wish to contribute changes to Zumastor should
make sure that our UML test suite passes before and after
their changes.  The UML test suite is in our SVN tree under
tests/uml.  The file to run there is *http://zumastor.googlecode.com/svn/trunk/test/uml/demo.sh[demo.sh]*.
See also http://zumastor.org/demo-uml-ubuntu.html[].

